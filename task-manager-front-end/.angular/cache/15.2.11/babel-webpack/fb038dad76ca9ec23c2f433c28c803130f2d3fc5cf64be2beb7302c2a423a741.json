{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/task-manager.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction TaskListComponentComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function TaskListComponentComponent_tr_23_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editRowData(task_r1));\n    });\n    i0.ɵɵtext(11, \"Edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"td\")(13, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function TaskListComponentComponent_tr_23_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteRowData(task_r1));\n    });\n    i0.ɵɵtext(14, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.priority);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.assignedTo);\n  }\n}\nexport class TaskListComponentComponent {\n  constructor(TaskManagerService, router) {\n    this.TaskManagerService = TaskManagerService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.get;\n  }\n  getList() {\n    this.TaskManagerService.getTaskManagerList().subscribe(el => {\n      this.taskList = el;\n    });\n  }\n  addTask() {\n    this.router.navigate(['task/add']);\n  }\n  editRowData(eve) {\n    this.router.navigate(['task/edit']);\n    this.TaskManagerService.taskData = eve;\n  }\n  deleteRowData(eve) {\n    this.TaskManagerService.deleteTaskList(eve.id).subscribe(el => {\n      console.log(el);\n    });\n  }\n  static #_ = this.ɵfac = function TaskListComponentComponent_Factory(t) {\n    return new (t || TaskListComponentComponent)(i0.ɵɵdirectiveInject(i1.TaskManagerService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskListComponentComponent,\n    selectors: [[\"app-task-list-component\"]],\n    decls: 24,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"flex-container\", \"mt-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function TaskListComponentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"div\")(4, \"h2\");\n        i0.ɵɵtext(5, \"Task List\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\")(7, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function TaskListComponentComponent_Template_button_click_7_listener() {\n          return ctx.addTask();\n        });\n        i0.ɵɵtext(8, \"Add\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"table\", 3)(10, \"thead\")(11, \"tr\")(12, \"th\");\n        i0.ɵɵtext(13, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"priority\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"Assigned To\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"th\");\n        i0.ɵɵtext(21, \"Action\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"tbody\");\n        i0.ɵɵtemplate(23, TaskListComponentComponent_tr_23_Template, 15, 4, \"tr\", 4);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngForOf\", ctx.taskList);\n      }\n    },\n    dependencies: [i3.NgForOf],\n    styles: [\"p[_ngcontent-%COMP%]{\\r\\n    background-color: red;\\r\\n}\\r\\n\\r\\n.flex-container[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    position: relative;\\r\\n\\r\\n\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvVGFza01hbmdlci90YXNrLWxpc3QtY29tcG9uZW50L3Rhc2stbGlzdC1jb21wb25lbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsOEJBQThCO0lBQzlCLGtCQUFrQjs7O0FBR3RCIiwic291cmNlc0NvbnRlbnQiOlsicHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxufVxyXG5cclxuLmZsZXgtY29udGFpbmVye1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG5cclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;IAuBYA,0BAAkC;IAC1BA,YAAgB;IAAAA,iBAAK;IACzBA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAAA,YAAqB;IAAAA,iBAAK;IAC9BA,0BAAI;IAA6CA;MAAA;MAAA;MAAA;MAAA,OAASA,0CAAiB;IAAA,EAAC;IAACA,qBAAI;IAAAA,iBAAS;IAC1FA,2BAAI;IAA8CA;MAAA;MAAA;MAAA;MAAA,OAASA,4CAAmB;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;;;;IAL3FA,eAAgB;IAAhBA,mCAAgB;IAChBA,eAAiB;IAAjBA,oCAAiB;IACjBA,eAAmB;IAAnBA,sCAAmB;IACnBA,eAAqB;IAArBA,wCAAqB;;;AClBzC,OAAM,MAAOC,0BAA0B;EAErCC,YAAmBC,kBAAqC,EAAQC,MAAa;IAA1D,uBAAkB,GAAlBD,kBAAkB;IAA2B,WAAM,GAANC,MAAM;EAAS;EAC/EC,QAAQ;IACN,IAAI,CAACC,GAAG;EACV;EAEAC,OAAO;IACL,IAAI,CAACJ,kBAAkB,CAACK,kBAAkB,EAAE,CAACC,SAAS,CAAEC,EAAE,IAAG;MAC3D,IAAI,CAACC,QAAQ,GAACD,EAAE;IAClB,CAAC,CAAC;EAEJ;EAEAE,OAAO;IACL,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;EACpC;EAEAC,WAAW,CAACC,GAAO;IACjB,IAAI,CAACX,MAAM,CAACS,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;IACnC,IAAI,CAACV,kBAAkB,CAACa,QAAQ,GAACD,GAAG;EAEtC;EAEAE,aAAa,CAACF,GAAO;IACpB,IAAI,CAACZ,kBAAkB,CAACe,cAAc,CAACH,GAAG,CAACI,EAAE,CAAC,CAACV,SAAS,CAAEC,EAAE,IAAG;MAC9DU,OAAO,CAACC,GAAG,CAACX,EAAE,CAAC;IAChB,CAAC,CAAC;EACH;EAAC;qBA5BUT,0BAA0B;EAAA;EAAA;UAA1BA,0BAA0B;IAAAqB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDTvC1B,sBAEM;QAENA,8BAAuB;QAENA,yBAAS;QAAAA,iBAAK;QACvBA,2BAAK;QAA8CA;UAAA,OAAS2B,aAAS;QAAA,EAAC;QAAC3B,mBAAG;QAAAA,iBAAS;QAKvFA,gCAAqB;QAGLA,sBAAK;QAAAA,iBAAK;QACdA,2BAAI;QAAAA,uBAAM;QAAAA,iBAAK;QACfA,2BAAI;QAAAA,yBAAQ;QAAAA,iBAAK;QACjBA,2BAAI;QAAAA,4BAAW;QAAAA,iBAAK;QACpBA,2BAAI;QAAAA,uBAAM;QAAAA,iBAAK;QAGvBA,8BAAO;QACHA,4EAQK;QACTA,iBAAQ;;;QATiBA,gBAAW;QAAXA,sCAAW","names":["i0","TaskListComponentComponent","constructor","TaskManagerService","router","ngOnInit","get","getList","getTaskManagerList","subscribe","el","taskList","addTask","navigate","editRowData","eve","taskData","deleteRowData","deleteTaskList","id","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\task-manager-app\\task-manager-front-end\\src\\app\\TaskManger\\task-list-component\\task-list-component.component.html","D:\\task-manager-app\\task-manager-front-end\\src\\app\\TaskManger\\task-list-component\\task-list-component.component.ts"],"sourcesContent":["<div>\n\n</div>\n\n<div class=\"container\">\n    <div class=\"flex-container mt-3\">\n        <div><h2>Task List</h2></div>\n        <div><button type=\"button\" class=\"btn btn-primary\" (click)=\"addTask()\">Add</button></div>\n    </div>\n\n    \n    \n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th>Title</th>\n                <th>Status</th>\n                <th>priority</th>\n                <th>Assigned To</th>\n                <th>Action</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let task of taskList\">\n                <td>{{ task.title }}</td>\n                <td>{{ task.status }}</td>\n                <td>{{ task.priority }}</td>\n                <td>{{ task.assignedTo }}</td>\n                <td><button type=\"button\" class=\"btn btn-primary\"(click)=\"editRowData(task)\">Edit</button></td>\n                <td><button type=\"button\" class=\"btn btn-primary\" (click)=\"deleteRowData(task)\">Delete</button></td>\n                \n            </tr>\n        </tbody>\n    </table>\n</div>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TaskManagerService } from 'src/app/services/task-manager.service';\n\n@Component({\n  selector: 'app-task-list-component',\n  templateUrl: './task-list-component.component.html',\n  styleUrls: ['./task-list-component.component.css']\n})\nexport class TaskListComponentComponent {\n  taskList:any\n  constructor(public TaskManagerService:TaskManagerService,public router:Router){}\n  ngOnInit(){\n    this.get\n  }\n\n  getList(){\n    this.TaskManagerService.getTaskManagerList().subscribe((el)=>{\n      this.taskList=el\n    })\n\n  }\n\n  addTask(){\n    this.router.navigate(['task/add'])\n  }\n\n  editRowData(eve:any){\n    this.router.navigate(['task/edit'])\n    this.TaskManagerService.taskData=eve\n\n  }\n\n  deleteRowData(eve:any){\n   this.TaskManagerService.deleteTaskList(eve.id).subscribe((el)=>{\n    console.log(el)\n   })\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}