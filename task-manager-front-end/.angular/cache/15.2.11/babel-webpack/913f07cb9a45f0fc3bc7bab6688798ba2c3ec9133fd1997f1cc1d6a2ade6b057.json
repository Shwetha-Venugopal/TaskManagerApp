{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/task-manager.service\";\nimport * as i3 from \"@angular/router\";\nexport class TaskFormComponentComponent {\n  constructor(fb, taskService, router) {\n    this.fb = fb;\n    this.taskService = taskService;\n    this.router = router;\n    this.taskForm = this.fb.group({\n      id: [],\n      title: [],\n      assignedTo: [],\n      updatedAt: [],\n      createdAt: [],\n      dueDate: [],\n      priority: [],\n      status: [],\n      description: []\n    });\n  }\n  ngOnInit() {\n    this.taskData = this.taskService.taskData;\n    console.log(this.taskData);\n    this.taskForm.patchValue(this.taskData);\n  }\n  submitTaskForm() {\n    if (this.taskForm.value === '') {\n      console.log(this.taskForm.value);\n      this.taskService.saveTaskMangerTask(this.taskForm.value).subscribe(res => {\n        console.log(res);\n      });\n    } else {\n      this.taskService.updateTaskManager(this.taskForm.value).subscribe(res);\n    }\n  }\n  cancelForm() {\n    this.router.navigate(['task']);\n  }\n  static #_ = this.ɵfac = function TaskFormComponentComponent_Factory(t) {\n    return new (t || TaskFormComponentComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TaskManagerService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskFormComponentComponent,\n    selectors: [[\"app-task-form-component\"]],\n    decls: 53,\n    vars: 1,\n    consts: [[1, \"form-container\", 3, \"formGroup\"], [1, \"form-content\"], [1, \"form-group\"], [\"for\", \"titleInput\"], [\"type\", \"text\", \"id\", \"titleInput\", \"placeholder\", \"Enter Title\", \"formControlName\", \"title\", 1, \"form-control\"], [\"for\", \"descriptionInput\"], [\"type\", \"text\", \"id\", \"descriptionInput\", \"formControlName\", \"description\", \"placeholder\", \"Enter Description\", 1, \"form-control\"], [\"for\", \"statusInput\"], [\"id\", \"statusInput\", \"formControlName\", \"status\", 1, \"form-control\"], [\"value\", \"pending\"], [\"value\", \"in-progress\"], [\"value\", \"completed\"], [\"for\", \"priorityInput\"], [\"id\", \"statusInput\", \"formControlName\", \"priority\", 1, \"form-control\"], [\"value\", \"High\"], [\"value\", \"Low\"], [\"for\", \"dueDateInput\"], [\"type\", \"date\", \"id\", \"dueDateInput\", \"formControlName\", \"dueDate\", 1, \"form-control\"], [\"for\", \"createdAtInput\"], [\"type\", \"datetime-local\", \"id\", \"createdAtInput\", \"formControlName\", \"createdAt\", 1, \"form-control\"], [\"for\", \"updatedAtInput\"], [\"type\", \"datetime-local\", \"id\", \"updatedAtInput\", \"formControlName\", \"updatedAt\", 1, \"form-control\"], [\"id\", \"statusInput\", \"formControlName\", \"assignedTo\", 1, \"form-control\"], [\"value\", \"John\"], [\"value\", \"Peter\"], [1, \"mt-3\", \"md-2\", \"margin-right\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function TaskFormComponentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"select\", 8)(14, \"option\", 9);\n        i0.ɵɵtext(15, \"Pending\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"option\", 10);\n        i0.ɵɵtext(17, \"In Progress\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"option\", 11);\n        i0.ɵɵtext(19, \"Completed\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"div\", 2)(21, \"label\", 12);\n        i0.ɵɵtext(22, \"Priority\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"select\", 13)(24, \"option\", 14);\n        i0.ɵɵtext(25, \"High\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"option\", 15);\n        i0.ɵɵtext(27, \"Low\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"div\", 2)(29, \"label\", 16);\n        i0.ɵɵtext(30, \"Due Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 2)(33, \"label\", 18);\n        i0.ɵɵtext(34, \"Created At\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 2)(37, \"label\", 20);\n        i0.ɵɵtext(38, \"Updated At\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 2)(41, \"label\", 12);\n        i0.ɵɵtext(42, \"Assigned To\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"select\", 22)(44, \"option\", 23);\n        i0.ɵɵtext(45, \"John\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"option\", 24);\n        i0.ɵɵtext(47, \"Peter\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(48, \"div\", 25)(49, \"button\", 26);\n        i0.ɵɵlistener(\"click\", function TaskFormComponentComponent_Template_button_click_49_listener() {\n          return ctx.submitTaskForm();\n        });\n        i0.ɵɵtext(50, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"button\", 26);\n        i0.ɵɵlistener(\"click\", function TaskFormComponentComponent_Template_button_click_51_listener() {\n          return ctx.cancelForm();\n        });\n        i0.ɵɵtext(52, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.taskForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".form-container[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    height: 100vh; \\r\\n    flex-direction: row;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    position: relative;\\r\\n    \\r\\n}\\r\\n\\r\\n.form-content[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    max-width: 600px; \\r\\n}\\r\\n\\r\\n\\r\\n.margin-right[_ngcontent-%COMP%]{\\r\\n    position: relative;\\r\\n    margin-right: 20px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvVGFza01hbmdlci90YXNrLWZvcm0tY29tcG9uZW50L3Rhc2stZm9ybS1jb21wb25lbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxhQUFhO0lBQ2IsYUFBYSxFQUFFLHFCQUFxQjtJQUNwQyxtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksV0FBVztJQUNYLGdCQUFnQixFQUFFLHFCQUFxQjtBQUMzQzs7O0FBR0E7SUFDSSxrQkFBa0I7SUFDbEIsa0JBQWtCO0FBQ3RCIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udGFpbmVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGhlaWdodDogMTAwdmg7IC8qIEFkanVzdCBhcyBuZWVkZWQgKi9cclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAvKiBvdmVyZmxvdzogYXV0bzsgKi9cclxufVxyXG5cclxuLmZvcm0tY29udGVudCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1heC13aWR0aDogNjAwcHg7IC8qIEFkanVzdCBhcyBuZWVkZWQgKi9cclxufVxyXG5cclxuXHJcbi5tYXJnaW4tcmlnaHR7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,0BAA0B;EAGrCC,YAAmBC,EAAc,EAAQC,WAA8B,EAAQC,MAAa;IAAzE,OAAE,GAAFF,EAAE;IAAoB,gBAAW,GAAXC,WAAW;IAA2B,WAAM,GAANC,MAAM;IACnF,IAAI,CAACC,QAAQ,GAAC,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC1BC,EAAE,EAAC,EAAE;MACLC,KAAK,EAAC,EAAE;MACRC,UAAU,EAAC,EAAE;MACbC,SAAS,EAAC,EAAE;MACZC,SAAS,EAAC,EAAE;MACZC,OAAO,EAAC,EAAE;MACVC,QAAQ,EAAC,EAAE;MACXC,MAAM,EAAC,EAAE;MACTC,WAAW,EAAC;KAEb,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAC,IAAI,CAACd,WAAW,CAACc,QAAQ;IACvCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,QAAQ,CAAC;IAC1B,IAAI,CAACZ,QAAQ,CAACe,UAAU,CAAC,IAAI,CAACH,QAAQ,CAAC;EACzC;EAEAI,cAAc;IACZ,IAAG,IAAI,CAAChB,QAAQ,CAACiB,KAAK,KAAG,EAAE,EAAC;MAC1BJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,QAAQ,CAACiB,KAAK,CAAC;MAChC,IAAI,CAACnB,WAAW,CAACoB,kBAAkB,CAAC,IAAI,CAAClB,QAAQ,CAACiB,KAAK,CAAC,CAACE,SAAS,CAAEC,GAAO,IAAG;QAC5EP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;MAClB,CAAC,CAAC;KACH,MAAI;MACH,IAAI,CAACtB,WAAW,CAACuB,iBAAiB,CAAC,IAAI,CAACrB,QAAQ,CAACiB,KAAK,CAAC,CAACE,SAAS,CAAEC,GAAG,CAAE;;EAG5E;EAEAE,UAAU;IACR,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;EAChC;EAAC;qBAtCU5B,0BAA0B;EAAA;EAAA;UAA1BA,0BAA0B;IAAA6B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCPvCC,8BAAmD;QAGjBA,qBAAK;QAAAA,iBAAQ;QACrCA,2BAA0G;QAC5GA,iBAAM;QACNA,8BAAwB;QACUA,2BAAW;QAAAA,iBAAQ;QACjDA,2BAA4H;QAChIA,iBAAM;QACNA,+BAAwB;QACKA,uBAAM;QAAAA,iBAAQ;QACvCA,kCAAuE;QAC3CA,wBAAO;QAAAA,iBAAS;QACxCA,mCAA4B;QAAAA,4BAAW;QAAAA,iBAAS;QAChDA,mCAA0B;QAAAA,0BAAS;QAAAA,iBAAS;QAGpDA,+BAAwB;QACOA,yBAAQ;QAAAA,iBAAQ;QAC3CA,mCAAyE;QAChDA,qBAAI;QAAAA,iBAAS;QAClCA,mCAAoB;QAAAA,oBAAG;QAAAA,iBAAS;QAGxCA,+BAAwB;QACMA,yBAAQ;QAAAA,iBAAQ;QAC1CA,6BAAoF;QACxFA,iBAAM;QACNA,+BAAwB;QACQA,2BAAU;QAAAA,iBAAQ;QAC9CA,6BAAkG;QACtGA,iBAAM;QACNA,+BAAwB;QACQA,2BAAU;QAAAA,iBAAQ;QAC9CA,6BAAkG;QACtGA,iBAAM;QACNA,+BAAwB;QACOA,4BAAW;QAAAA,iBAAQ;QAC9CA,mCAA2E;QAClDA,qBAAI;QAAAA,iBAAS;QAClCA,mCAAsB;QAAAA,sBAAK;QAAAA,iBAAS;QAG5CA,gCAAoC;QACcA;UAAA,OAASC,oBAAgB;QAAA,EAAC;QAACD,uBAAM;QAAAA,iBAAS;QACxFA,mCAAqE;QAAvBA;UAAA,OAASC,gBAAY;QAAA,EAAC;QAACD,uBAAM;QAAAA,iBAAS;;;QA9CpEA,wCAAsB","names":["TaskFormComponentComponent","constructor","fb","taskService","router","taskForm","group","id","title","assignedTo","updatedAt","createdAt","dueDate","priority","status","description","ngOnInit","taskData","console","log","patchValue","submitTaskForm","value","saveTaskMangerTask","subscribe","res","updateTaskManager","cancelForm","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\task-manager-app\\task-manager-front-end\\src\\app\\TaskManger\\task-form-component\\task-form-component.component.ts","D:\\task-manager-app\\task-manager-front-end\\src\\app\\TaskManger\\task-form-component\\task-form-component.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TaskManagerService } from 'src/app/services/task-manager.service';\n\n@Component({\n  selector: 'app-task-form-component',\n  templateUrl: './task-form-component.component.html',\n  styleUrls: ['./task-form-component.component.css']\n})\nexport class TaskFormComponentComponent {\n  taskForm:FormGroup\n  taskData:any\n  constructor(public fb:FormBuilder,public taskService:TaskManagerService,public router:Router){\n    this.taskForm=this.fb.group({\n      id:[],\n      title:[],\n      assignedTo:[],\n      updatedAt:[],\n      createdAt:[],\n      dueDate:[],\n      priority:[],\n      status:[],\n      description:[]\n\n    })\n  }\n\n  ngOnInit(){\n    this.taskData=this.taskService.taskData\n    console.log(this.taskData)\n    this.taskForm.patchValue(this.taskData)\n  }\n\n  submitTaskForm(){\n    if(this.taskForm.value===''){\n      console.log(this.taskForm.value)\n      this.taskService.saveTaskMangerTask(this.taskForm.value).subscribe((res:any)=>{\n        console.log(res)\n      })\n    }else{\n      this.taskService.updateTaskManager(this.taskForm.value).subscribe((res))\n    }\n    \n  }\n\n  cancelForm(){\n    this.router.navigate(['task'])\n  }\n\n\n\n}\n","<!-- Add the Bootstrap CSS for styling -->\n<!-- <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"> -->\n\n<div class=\"form-container\" [formGroup]=\"taskForm\">\n    <form class=\"form-content \">\n        <div class=\"form-group\">\n          <label for=\"titleInput\">Title</label>\n          <input type=\"text\" class=\"form-control\" id=\"titleInput\" placeholder=\"Enter Title\" formControlName=\"title\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"descriptionInput\">Description</label>\n            <input type=\"text\" class=\"form-control\" id=\"descriptionInput\" formControlName=\"description\" placeholder=\"Enter Description\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"statusInput\">Status</label>\n            <select class=\"form-control\" id=\"statusInput\" formControlName=\"status\">\n                <option value=\"pending\">Pending</option>\n                <option value=\"in-progress\">In Progress</option>\n                <option value=\"completed\">Completed</option>\n            </select>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"priorityInput\">Priority</label>\n            <select class=\"form-control\" id=\"statusInput\" formControlName=\"priority\">\n                <option value=\"High\">High</option>\n                <option value=\"Low\">Low</option>\n            </select>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"dueDateInput\">Due Date</label>\n            <input type=\"date\" class=\"form-control\" id=\"dueDateInput\" formControlName=\"dueDate\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"createdAtInput\">Created At</label>\n            <input type=\"datetime-local\" class=\"form-control\" id=\"createdAtInput\" formControlName=\"createdAt\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"updatedAtInput\">Updated At</label>\n            <input type=\"datetime-local\" class=\"form-control\" id=\"updatedAtInput\" formControlName=\"updatedAt\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"priorityInput\">Assigned To</label>\n            <select class=\"form-control\" id=\"statusInput\" formControlName=\"assignedTo\">\n                <option value=\"John\">John</option>\n                <option value=\"Peter\">Peter</option>\n            </select>\n        </div>\n        <div class=\"mt-3 md-2 margin-right\">\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"submitTaskForm()\">Submit</button>\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"cancelForm()\">Cancel</button>\n        </div>\n       \n        \n    </form>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}