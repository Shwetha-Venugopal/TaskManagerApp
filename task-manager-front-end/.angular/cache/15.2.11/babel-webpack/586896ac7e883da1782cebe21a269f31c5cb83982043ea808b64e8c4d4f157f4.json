{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CustomDirective {\n  constructor(el) {\n    this.el = el;\n  }\n  OnMouseOver() {\n    this.el.nativeElement.style.borderColor = this.borderColor || 'black';\n  }\n  onmouseOut() {\n    this.el.nativeElement.style.borderColor = '';\n  }\n  get getFont() {\n    return this.fontSize ? this.fontSize + 'px' : null;\n  }\n  Input() {\n    let data = '';\n    data += this.el.nativeElement.value;\n    let res = data.charAt(0).toUpperCase() + data.slice(1).trim().replace(/\\s+/g, ' ');\n    console.log(res);\n  }\n  static #_ = this.ɵfac = function CustomDirective_Factory(t) {\n    return new (t || CustomDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: CustomDirective,\n    selectors: [[\"\", \"appCustom\", \"\"]],\n    hostVars: 2,\n    hostBindings: function CustomDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mouseover\", function CustomDirective_mouseover_HostBindingHandler() {\n          return ctx.OnMouseOver();\n        })(\"mouseout\", function CustomDirective_mouseout_HostBindingHandler() {\n          return ctx.onmouseOut();\n        })(\"input\", function CustomDirective_input_HostBindingHandler() {\n          return ctx.Input();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"font-size\", ctx.getFont);\n      }\n    },\n    inputs: {\n      borderColor: [\"appCustom\", \"borderColor\"],\n      fontSize: \"fontSize\"\n    }\n  });\n}","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,eAAe;EAI1BC,YAAmBC,EAAa;IAAb,OAAE,GAAFA,EAAE;EAAe;EACTC,WAAW;IACpC,IAAI,CAACD,EAAE,CAACE,aAAa,CAACC,KAAK,CAACC,WAAW,GAAC,IAAI,CAACA,WAAW,IAAE,OAAO;EACnE;EAE0BC,UAAU;IAClC,IAAI,CAACL,EAAE,CAACE,aAAa,CAACC,KAAK,CAACC,WAAW,GAAC,EAAE;EAC5C;EAEA,IAAmCE,OAAO;IACxC,OAAO,IAAI,CAACC,QAAQ,GAAC,IAAI,CAACA,QAAQ,GAAC,IAAI,GAAC,IAAI;EAC9C;EAEuBC,KAAK;IAC1B,IAAIC,IAAI,GAAC,EAAE;IACXA,IAAI,IAAE,IAAI,CAACT,EAAE,CAACE,aAAa,CAACQ,KAAK;IACjC,IAAIC,GAAG,GAACF,IAAI,CAACG,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAACJ,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAE,CAACC,OAAO,CAAC,MAAM,EAAC,GAAG,CAAC;IAC7EC,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;EAClB;EAAC;qBAtBUb,eAAe;EAAA;EAAA;UAAfA,eAAe;IAAAqB;IAAAC;IAAAC;MAAA;;iBAAfC,iBAAa;QAAA;UAAA,OAAbA,gBAAY;QAAA;UAAA,OAAZA,WAAO;QAAA","names":["CustomDirective","constructor","el","OnMouseOver","nativeElement","style","borderColor","onmouseOut","getFont","fontSize","Input","data","value","res","charAt","toUpperCase","slice","trim","replace","console","log","selectors","hostVars","hostBindings","ctx"],"sourceRoot":"","sources":["D:\\task-manager-app\\task-manager-front-end\\src\\app\\directive\\custom.directive.ts"],"sourcesContent":["import { style } from '@angular/animations';\nimport { Directive, ElementRef, HostBinding, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appCustom]'\n})\nexport class CustomDirective {\n  @Input('appCustom') borderColor: string | undefined; // Input property to accept the border color\n  @Input('fontSize') fontSize:Number | undefined\n\n  constructor(public el:ElementRef) { }\n  @HostListener('mouseover') OnMouseOver(){\n    this.el.nativeElement.style.borderColor=this.borderColor||'black'\n  }\n\n  @HostListener('mouseout') onmouseOut(){\n    this.el.nativeElement.style.borderColor=''\n  }\n\n  @HostBinding('style.fontSize') get getFont(){\n    return this.fontSize?this.fontSize+'px':null\n  }\n\n  @HostListener('input') Input(){\n    let data=''\n    data+=this.el.nativeElement.value\n    let res=data.charAt(0).toUpperCase()+data.slice(1).trim().replace(/\\s+/g,' ')\n    console.log(res)\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}